Относительный адрес: адрес начиная с вершины стека переменных
Абсолютный адрес: адрес начиная с нуля
Типы данных:
	D - double 8 байт
	F - float 4 байта
	L - long 8 байт
	I - int 4 байта
	S - short 2 байта
	C - char 1 байт
Флаги команды (2 байта):
	//биты: хххх B A 9 8 7 6 5 432 10
	биты 01 - Тип назначения, который пишем/считываем в/из стэка.
		0 - Int
		1 - Long
		2 - Float (поддержка сброшена)
		3 - Double
	биты 234 - Исходный тип
		0 - Char
		1 - Short
		2 - Int
		3 - Long
		4 - Float
		5 - Double
	бит 5 - Данные находяться по 4-ёх байтному относительному адресу. (см. "бит 7")
	бит 6 - Данные находяться по 4-ёх байтному абсолютному адресу. (см. "бит 7")
	бит 7 - Адрес из описанния битов 5 и 6 находиться на вершине стека значений (для команды MOV - под данными)
	бит 8 - Для адреса применяеться сдвиг указанный за инструкцией, если бит 9 не установлен.
	бит 9 - Величина сдвига находиться в стеке значений:
				если есть адрес в стеке значений, то под адрессом
				если нету адреса в стеке значений, то на его вершине (для команды MOV - под данными)
	бит A - Сдвиг ограничен значением, которое лежит за инструкцией
	бит B - Сдвиг ограничен значением, которое лежит в стеке:
				если сдвиг в стеке значений, то под сдвигом
				если нету сдвига в стеке значений, то под адрессом
				если ни сдвига, ни адреса нет в стеке значений, то на его вершине (для команды MOV - под данными)
	биты х - зарезервированы

Значения в квадратных скобках [] опциональны
Синтаксис команды: Команда, Флаги, [Данные команды]
Команды (2 байта):
	PUSH flag, [val], [addr], [shift], [size]
		Кладёт данные типа D/F/L/I/S/C (флаг 234) в стек, преобразуя их в D/F/L/I (флаг 01)
		Если флаг 5/6 не установлен, то значение следует за Флагами (val).
		Если флаг 5/6 не установлен, данные беруться по адресу (addr), если флаг 7 не установлен
		Если флаг 8 установлен, сдвиг (shift) располагаеться за инструкцией
		В зависимости от установленных флагов в стеке значений могут распологаться параметры addr, shift, size в таком порядке:
			D size
			D shift
			D addr [вершина стека]

		Флаги 9, A и B работают по описанию

	POP flag
		Уберает данные типа D/F/L/I (флаг 01) со стека

		Флаги 2-B не используються
////////////////////////////////////////////////////////////////////////////////////////////
	MOV flag, [addr], [shift], [size]
		Перемещает значение типа Q/D (флаг 0) из стека в переменную типа Q/D/S/C (флаг 12) по адрессу.
		WRONG: Если флаги 3 и 4 не установлены, считаеться что установлен флаг 3
		В зависимости от установленных флагов в стеке значений могут распологаться параметры addr, shift, size в таком порядке:
			D size
			D shift
			D addr
			I/L/D value [вершина стека]

		Флаги 4, 5, 6, 7, 8, 9 работают по описанию
		Флаг 3 не используеться

	SHIFT flag, [addr], [size]
		Сдвигает адрес типа D на значение находящиеся на вершине стека значений, с ограничением по size
		Если флаги 3 и 4 не установлены, считаеться что установлен флаг 3
		В зависимости от установленных флагов в стеке значений могут распологаться параметры addr, shift, size в таком порядке:
			D size
			D addr
			D shift [вершина стека]
		
		Флаги 4, 5, 8, 9 работают по описанию
		Флаги 6, 7 не используються

	ADD opFlag
		opFlag - особый флаг (1 байт):
			биты 01 тип обоих операндов
			
			возможные типы:
				0 - DOUBLE
				1 - FLOAT
				2 - LONG
				3 - INT
	SUB MUL DIV POW как ADD
	
	NEG opFlag
		opFlag - особый флаг (1 байт):
			биты 01 тип операнда 

	RTOI flag
		Преобразует вещественное число double/float в целое long/int в зависимости от Флагов:
			Q/D (флаг 0) Q/D (флаг 12)

	ITOR flag
		Преобразует целое число long/int в вещественное double/float в зависимости от Флагов:
			Q/D (флаг 12) Q/D (флаг 0)