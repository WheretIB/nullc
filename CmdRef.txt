Относительный адрес: адрес начиная с вершины стека переменных
Абсолютный адрес: адрес начиная с нуля
Типы данных в стеке переменных:
	D - double 8 байт
	F - float 4 байта
	L - long 8 байт
	I - int 4 байта
	S - short 2 байта
	C - char 1 байт
Типы данных в основном стеке:
	D - double 8 байт
	L - long 8 байт
	I - int 4 байта

Команды имеют фиксированный размер. Формат команды:
	идентификатор команды - 1 байт
	флаг (flag) - 1 байт
	вспомогательное поле (helper) - 2 байта
	аргумент (argument) - 4 байта

Список доступных команд и их описание:
	NOP // (cmdNop) No OPeration
		Отсутствие операции (может свидетельствовать об ошибке в байткоде)

	cmdPushCharAbs	argument
	cmdPushShortAbs	argument
	cmdPushIntAbs	argument
	cmdPushFloatAbs	argument
	cmdPushDorLAbs	argument
		Положить значение, указанного типа, из памяти по адресу argument в стек 
	cmdPushCmplxAbs	helper, argument
		Положить значение размером, указанным в helper, из памяти по адресу argument в стек 

	cmdPushCharRel	argument
	cmdPushShortRel	argument
	cmdPushIntRel	argument
	cmdPushFloatRel	argument
	cmdPushDorLRel	argument
		Положить значение, указанного типа, из памяти по относительному адресу argument в стек 
	cmdPushCmplxRel	helper, argument
		Положить значение размером, указанным в helper, из памяти по относительному адресу argument в стек 

	cmdPushCharStk	argument
	cmdPushShortStk	argument
	cmdPushIntStk	argument
	cmdPushFloatStk	argument
	cmdPushDorLStk	argument
		Положить значение, указанного типа, из памяти по адресу argument со сдвигом на вершине стека в стек 
	cmdPushCmplxStk	helper, argument
		Положить значение размером, указанным в helper, из памяти по адресу argument со сдвигом на вершине стека в стек 

	cmdPushImmt	argument
		Положить аргумент (4 байта) в стек

	cmdMovCharAbs	argument
	cmdMovShortAbs	argument
	cmdMovIntAbs	argument
	cmdMovFloatAbs	argument
	cmdMovDorLAbs	argument
		Скопировать значение указанного типа с вершины стека в память по адресу argument
	cmdMovCmplxAbs	helper, argument
		Скопировать значение указанного в helper размера с вершины стека в память по адресу argument

	cmdMovCharRel	argument
	cmdMovShortRel	argument
	cmdMovIntRel	argument
	cmdMovFloatRel	argument
	cmdMovDorLRel	argument
		Скопировать значение указанного типа с вершины стека в память по относительному адресу argument
	cmdMovCmplxRel	helper, argument
		Скопировать значение указанного в helper размера с вершины стека в память по относительному адресу argument

	cmdMovCharStk	argument
	cmdMovShortStk	argument
	cmdMovIntStk	argument
	cmdMovFloatStk	argument
	cmdMovDorLStk	argument
		Скопировать значение указанного типа с вершины стека в память по адресу argument со сдвигом на вершине стека
	cmdMovCmplxStk	helper, argument
		Скопировать значение указанного в helper размера с вершины стека в память по адресу argument со сдвигом на вершине стека

	cmdReserveV		argument
		зарезервировать argument байт места в стеке переменных

	cmdPopCharTop	argument
	cmdPopShortTop	argument
	cmdPopIntTop	argument
	cmdPopFloatTop	argument
	cmdPopDorLTop	argument
		Скопировать и убрать со стека значение указанного типа с вершины стека в память по адресу argument + размер стека переменных
	cmdPopCmplxTop	helper, argument
		Скопировать значение указанного в helper размера с вершины стека в память по адресу argument + размер стека переменных

	cmdPop	argument
		убрать argument байт со стека

	cmdDtoI
		Преобразовать double на вершине стека в int
	cmdDtoL
		Преобразовать double на вершине стека в long
	cmdDtoF
		Преобразовать double на вершине стека в float
	cmdItoD
		Преобразовать int на вершине стека в double
	cmdLtoD
		Преобразовать long на вершине стека в double
	cmdItoL
		Преобразовать int на вершине стека в long
	cmdLtoI
		Преобразовать long на вершине стека в int

	cmdImmtMulD	argument
		Сконвентирлвать double на вершине стека в int и умножить на argument
	cmdImmtMulL	argument
		Сконвентирлвать long на вершине стека в int и умножить на argument
	cmdImmtMulI	argument
		Умножить int на верхушке стека на argument

	cmdCopyDorL
		Продублировать double или long значение на верхушке стека
	cmdCopyI
		Продублировать int на верхушке стека

	cmdGetAddr	argument
		Положить в стек int равный (argument + parameter_base)

	cmdFuncAddr	argument
		Положить в стек адрес функции по индексу argument

	cmdSetRange	helper, argument
		Установить значение всем элементам массива.
		Начальная позиция - argument, количество элементов - на вершине стека.
		Тип элемента - helper

	cmdJmp	argument
		Безусловный переход по адресу в argument

	cmdJmpZI	argument
		перейти по адресу в argument, если int на вершине стека равен 0.
		int убирается со стека.
	cmdJmpZD	argument
		перейти по адресу в argument, если double на вершине стека равен 0.
		double убирается со стека.
	cmdJmpZL	argument
		перейти по адресу в argument, если long на вершине стека равен 0.
		long убирается со стека.

	cmdJmpNZI	argument
		перейти по адресу в argument, если int на вершине стека не равен 0.
		int убирается со стека.
	cmdJmpNZD	argument
		перейти по адресу в argument, если double на вершине стека не равен 0.
		double убирается со стека.
	cmdJmpNZL	argument
		перейти по адресу в argument, если long на вершине стека не равен 0.
		long убирается со стека.

	cmdCall		argument
		Вызов внутренней функции по адресу в argument, если argument не равен -1.
		Если argument равен -1, адрес функции берётся и убирается с вершины стека.
	cmdCallStd	argument
		Вызов внешней или встроенной функции

	cmdReturn	flag, helper, argument
		Возврат из функции и выполнение cmdPopVTop argument раз.
		Если flag установлен в bitRetError, выполнение программы останавливается с ошибкой, что функция не вернула значение.
		helper содержит идентификатор возвращаемого типа, если установлен бит bitRetSimple или размер возвращаемого типа, если бит не установлен.

	cmdPushVTop
		Положить количество активных переменных в стек вершин стека переменных

	cmdPopVTop
		Сократить стек переменных до предыдущего значения вершины и убрать значение вершины из стека значений вершин

	cmdPushV	argument
		Расширить стек переменных на argument байт

	cmdAdd		// a + b
	cmdSub		// a - b
	cmdMul		// a * b
	cmdDiv		// a / b
	cmdPow		// a ** b (power)
	cmdMod		// a % b
	cmdLess		// a < b
	cmdGreater	// a > b
	cmdLEqual	// a <= b
	cmdGEqual	// a >= b
	cmdEqual	// a == b
	cmdNEqual	// a != b
	cmdShl		// a << b
	cmdShr		// a >> b
	cmdBitAnd	// a & b	binary AND/бинарное И
	cmdBitOr	// a | b	binary OR/бинарное ИЛИ
	cmdBitXor	// a ^ b	binary XOR/бинарное Исключающее ИЛИ
	cmdLogAnd	// a && b	logical AND/логическое И
	cmdLogOr	// a || b	logical OR/логическое ИЛИ
	cmdLogXor	// a ^^ b	logical XOR/логическое Исключающее ИЛИ
		Взять два int значения с вершины стека, выполнить необходимую операцию, и поместить результат (int) в стек.
		b с вершины стека, a - следующее за вершиной значение

	cmdAddL		// a + b
	cmdSubL		// a - b
	cmdMulL		// a * b
	cmdDivL		// a / b
	cmdPowL		// a ** b (power)
	cmdModL		// a % b
	cmdLessL	// a < b
	cmdGreaterL	// a > b
	cmdLEqualL	// a <= b
	cmdGEqualL	// a >= b
	cmdEqualL	// a == b
	cmdNEqualL	// a != b
	cmdShlL		// a << b
	cmdShrL		// a >> b
	cmdBitAndL	// a & b	binary AND/бинарное И
	cmdBitOrL	// a | b	binary OR/бинарное ИЛИ
	cmdBitXorL	// a ^ b	binary XOR/бинарное Исключающее ИЛИ
	cmdLogAndL	// a && b	logical AND/логическое И
	cmdLogOrL	// a || b	logical OR/логическое ИЛИ
	cmdLogXorL	// a logical_xor b	logical XOR/логическое Исключающее ИЛИ
		Взять два long значения с вершины стека, выполнить необходимую операцию, и поместить результат (long) в стек.
		b с вершины стека, a - следующее за вершиной значение

	cmdAddD		// a + b
	cmdSubD		// a - b
	cmdMulD		// a * b
	cmdDivD		// a / b
	cmdPowD		// a ** b (power)
	cmdModD		// a % b
	cmdLessD	// a < b
	cmdGreaterD	// a > b
	cmdLEqualD	// a <= b
	cmdGEqualD	// a >= b
	cmdEqualD	// a == b
	cmdNEqualD	// a != b
		Взять два double значения с вершины стека, выполнить необходимую операцию, и поместить результат (double) в стек.
		b с вершины стека, a - следующее за вершиной значение

	cmdNeg		// negation
	cmdBitNot	// ~	binary NOT
	cmdLogNot	// !	logical NOT
		Произвести операцию над int значением на вершине стека

	cmdNegL		// negation
	cmdBitNotL	// ~	binary NOT
	cmdLogNotL	// !	logical NOT
		Произвести операцию над long значением на вершине стека

	cmdNegD		// negation
	cmdLogNotD	// !	logical NOT
		Произвести операцию над double значением на вершине стека

	cmdIncI
	cmdIncD
	cmdIncL

	cmdDecI
	cmdDecD
	cmdDecL

	cmdAddAtCharStk
	cmdAddAtShortStk
	cmdAddAtIntStk
	cmdAddAtLongStk
	cmdAddAtFloatStk
	cmdAddAtDoubleStk
